

/*===========================
    1.COMMON css 
===========================*/


@import url('https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700,800');

 body {
	font-family: $poppins;
	font-weight: normal;
	font-style: normal;
    color: $body-text-color;
}

*{
    margin: 0;
    padding: 0;
    @include box-sizing (border-box);
}

img {
	max-width: 100%;
}

a:focus,
input:focus,
textarea:focus,
button:focus {
	text-decoration: none;
	outline: none;
}

a:focus,
a:hover{
	text-decoration: none;
}

i,
span,
a{
    display: inline-block;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	font-family: $poppins;
	font-weight: 600;
	color: $heading-color;
	margin: 0px;
}

h1 {
    font-size: 92px;
}
h2 {
	font-size: 35px;
}
h3 {
	font-size: 32px;
}
h4 {
	font-size: 24px;
}
h5 {
	font-size: 20px;
}
h6 {
	font-size: 16px;
}

ul,ol {
	margin: 0px;
	padding: 0px;
    list-style-type: none;
}

p {
	font-size: 16px;
	font-weight: 400;
	line-height: 24px;
	color: $body-text-color;
	margin: 0px;
}

.bg_cover{
    background-position: center center;
    background-size: cover;
    background-repeat: no-repeat;
    width: 100%;
    height: 100%;
}

// others common css here



/*===== All Button Style =====*/

.main-btn {
	display: inline-block;
	font-weight: 400;
	text-align: center;
	white-space: nowrap;
	vertical-align: middle;
	@inlude user-select(none);
	border: 1px solid $theme-color;
	padding: 0 35px;
	font-size: 16px;
	line-height: 48px;
    color: $white;
    cursor: pointer;
    z-index: 5;
    @include transition(0.4s);
    background-color: $theme-color;
    
    @media #{$xs}{
        font-size: 14px;
        padding: 0 25px;
        line-height: 43px;
    }
    
    & i{
        font-size: 12px;
        margin-left: 5px;
    }
    
    &:hover{
        background-color: $white;
        color: $theme-color;
        border-color: $theme-color;
    }
    
    &.main-btn-2{
        background-color: $white;
        color: $theme-color;
        border-color: $theme-color;
        &:hover{
            background-color: $theme-color;
            border-color: $theme-color;
            color: $white;
        }
    }
}


/*===== All Section Title Style =====*/

.section-title{
    & h5{
        position: relative;
        font-size: 18px;
        color: $theme-color;
        font-weight: 500;
        padding-left: 110px;
        
        &::before{
            position: absolute;
            content: '';
            top: 50%;
            left: 0;
            width: 100px;
            height: 1px;
            background-color: $theme-color;
            @include transform(translateY(-50%));
        }
    }
    & .title{
        font-size: 32px;
        
        @media #{$xs}{
            font-size: 26px;
        }
    }
    & p{}
}



/*===== All Preloader Title Style =====*/


    
.preloader{
    /* Body Overlay */
    position: fixed;
    top: 0;
    left: 0;
    display: table;
    width: 100%;
    height: 100%;
    /* Change Background Color */
    background: #fdfdfd;
    z-index: 9999;
    
    
    & .spin{
        position: absolute;
        top: 50%;
        left: 50%;
        @include transform(translate(-50%, -50%));
        width: 40px;
        height: 40px;
        
        & .cube1,
        & .cube2{
            background-color: $theme-color;
            width: 15px;
            height: 15px;
            position: absolute;
            top: 0;
            left: 0;
            @include animation(sk-cubemove 1.8s infinite ease-in-out);
        }
        & .cube2{
            @include animation-delay(-0.9s);
        }
    }
}

/* CSS Keyframe Animation */

@-webkit-keyframes sk-cubemove {
    25% {
        @include transform(translateX(42px) rotate(-90deg) scale(0.5));
    }
    50% {
        @include transform(translateX(42px) translateY(42px) rotate(-180deg));
    }
    75% {
        @include transform(translateX(0px) translateY(42px) rotate(-270deg) scale(0.5));
    }
    100% {
        @include transform(rotate(-360deg));
    }
}

@keyframes sk-cubemove {
    25% { 
        @include transform(translateX(42px) rotate(-90deg) scale(0.5));
    } 
    50% { 
        @include transform(translateX(42px) translateY(42px) rotate(-180deg));
    } 
    50.1% { 
        @include transform(translateX(42px) translateY(42px) rotate(-180deg));
    } 
    75% { 
        @include transform(translateX(0px) translateY(42px) rotate(-270deg) scale(0.5));
    } 
    100% { 
        @include transform(rotate(-360deg));
    }
}
    
    








